<?xml version="1.0" encoding="utf-8"?>
<search>
  
    
    <entry>
      <title><![CDATA[golang资料整理]]></title>
      <url>%2F2017%2F02%2F02%2Fgolang%E8%B5%84%E6%96%99%E6%95%B4%E7%90%86%2F</url>
      <content type="text"><![CDATA[入门资料整理golang-web在线编辑器wide | golang书籍GO入门指南 | GO语言教程 | golangman【是一个帮助具有其他语言开发经验的人快速上手的开源项目】| Go by Example |[Go by Example 中文) | GO 指南 | GoDoc | 网站教程幕课网 | 51CTO | 实验楼 | go编程基础| 网易云课堂 | 哔哩哔哩 | 官网中文版 | 环境搭建 | 中文版环境搭建 | golang-tour | tour-中文版 | 功效使用go | 高效使用go中文版 | 参考: https://771dian.com/p/portal/VJhVeydtg【go导航】 golang教程网站酷壳 | W3Cschool | 百易教程 | RUNOOB | 极客学院 | W3II | golang 社区Golang中国 | GO语言中文网 |]]></content>
    </entry>

    
    <entry>
      <title><![CDATA[无闻-go语言编程基础笔记]]></title>
      <url>%2F2017%2F01%2F30%2F%E6%97%A0%E9%97%BB-go%E8%AF%AD%E8%A8%80%E7%BC%96%E7%A8%8B%E5%9F%BA%E7%A1%80%E7%AC%94%E8%AE%B0%2F</url>
      <content type="text"><![CDATA[无闻-go语言编程基础笔记一:go的环境变量与工作目录GOPATH下需要建立3个目录 bin （存放编译后生成的可执行文件） pkg （存放编译后生成的包文件） src （存放项目的源码） 二:go常用命令 go get : 获取远程包（需要提前安装 git或hg） go run : 直接运行程序 go build : 测试编译，检查是否有编译错误 （package main ）可执行入口 go fmt : 格式化源码 go install : 编译包文件并编译整个程序 go test : 运行测试文件 （**_test.go是测试文件） go doc : 查看文档(本地官网 go -http=:8080 &amp; 后台执行) 三：go注释 12// 多行注释/* */ 多行注释 三: go程序结构 package main包含main函数 一个可执行程序只有一个main包 import 导入非main的包 12345678910111213141516171819202122232425// 当前程序的包名package main// 导入其他的包import &quot;fmt&quot;// 常量定义const PI = 3.14// 全局变量的声明与赋值var name = &quot;gopher&quot;// 一般类型声明type newtype int// 结构的声明type gopher struct&#123;&#125;// 接口的声明type golang interface&#123;&#125;// 由main函数作为程序入口点启动func main() &#123; Println(&quot;Hello workd！你好， 世界！&quot;)&#125; ## import 导入包格式 12345678910111213import &quot;fmt&quot; &quot;io&quot; &quot;xxx&quot; import ( &quot;fmt&quot; &quot;io&quot; &quot;xxx&quot;) 注意： 省略调用不可以和别名同时使用。 可见性规则go语言：使用大小写来决定： 常量，变量，类型，接口，结构，函数。是否被外部包所调用。 函数名大写，即为：private 函数名小写，即为：public 参考：暗黑破坏球嘿哈:http://www.jianshu.com/p/1da03e36f382]]></content>
    </entry>

    
    <entry>
      <title></title>
      <url>%2F2017%2F01%2F27%2Fchrome%E5%B8%B8%E7%94%A8%E6%8F%92%E4%BB%B6%E6%8E%A8%E8%8D%90%2F</url>
      <content type="text"><![CDATA[title: chrome常用插件推荐categories: - 其他 tags: - chrome插件 date: 2017-01-17 20:21:47​— chrome常用插件推荐 Diigo Web Collector :是一款集书签、注释、截图和标记等多种强大功能于一身的Chrome插件。]]></content>
    </entry>

    
    <entry>
      <title><![CDATA[my-wiki]]></title>
      <url>%2F2017%2F01%2F21%2Fmy-wiki%2F</url>
      <content type="text"><![CDATA[注：以下资源搜集于互联网 web网址导航龙轩导航 / 谷粉搜导航 / AnywhereAnything / 虫部落*快搜 搜索引擎 google / bing / 西林街搜索 / yandex社区 虫部落 / HTTPS（ssl） Let’s Encrypt 菜单对应的图标 Font Awesome 编程语言golang 网络下载BT / qBittorrent 邮箱 youmail:http://www.yomail.com/?utm_source=iplaysoft#page-top [YoMail可以收发gmail的客户端]网络云盘 天翼云：http://cloud.189.cn/ / 百度网盘：http://yun.baidu.com/ / 天翼网盘直连解析：http://www.826v.com/同步盘 resilio[无需服务器的同步工具] / owncloud【介绍：http://www.appinn.com/owncloud-6/】 科学上网 windows: android: 免费vpn: 极光vpn 翻越vpn vps RamNode 工具PDF文档转换工具 smallpdf在线工具 万能查询和在线工具：http://iumr.ga/屏幕截图软件 Snipaste :https://www.snipaste.com/ [屏幕截图软件超级利器] markdown工具 MarkdownIME / typora[markdown写作特好用] / markdownEditor / 免费资源资源网站免费资源部落 | 电影视频 ZogVM 电影视频管理软件：https://github.com/zogvm/zogvm [一款电影视频管理软件]科学上网 windows: android: 免费vpn: 极光vpnvps RamNode 工具PDF文档转换工具 smallpdf在线工具 万能查询和在线工具：http://iumr.ga/屏幕截图软件 Snipaste :https://www.snipaste.com/ [屏幕截图软件超级利器] 让WI-FI速度跑的比邻居快【来自小众软件】 免费资源电影视频 ZogVM 电影视频管理软件：https://github.com/zogvm/zogvm [一款电影视频管理软件]学习资源学习网站 麦子学院 英语学习软件多邻国 pc常用软件参考:来自西界:http://www.jianshu.com/p/f82df1035669 系统linuxwindowswindows下的babun【linux shell参考链接:http://www.jianshu.com/p/068935206960】]]></content>
    </entry>

    
    <entry>
      <title><![CDATA[go语言基础]]></title>
      <url>%2F2017%2F01%2F08%2Fgo%E8%AF%AD%E8%A8%80%E5%9F%BA%E7%A1%80%2F</url>
      <content type="text"><![CDATA[go程序的一般结构 go程序是通过package来组织的 只有package名称为main的包可以包含main函数 一个可执行程序==有且仅有==一个main包 通过==import==关键字来导入其它非main包 通过==const==关键字来进行常量的定义 通过在函数体外部使用==var==关键字来进行全局变量的声明与赋值 通过==type==关键字进行结构（struct）或接口（interface）的声明 通过==func==关键之来进行函数的声明 GO注释方法 // :单行注释 / / ：多行注释 可见性规则 GO使用大小写来决定该 常量，变量，类型，接口，结构或函数 是否可以被外部包所调用： 函数名首字母： ==小写==，即为只允许包内使用。 函数名首字母： ==大写==，即为整个工作区都可以使用。GO基本类型和运算符 布尔类型例子： 1var b bool = true 布尔类型的值只可以是常量true或false。 两个类型相同的值可以使用相等==或者不等!=运算符来进行比较。 相等 两边的值完全相同时，会返回true,负责返回false并且要在两个值的类型相同的情况下才可以使用。 示例： 123var aVar = 10aVar == 5 -&gt; falseaVar == 10 -&gt; true 不等运算符两边值不同的时候会返回true，负责返回false。 示例： 123var aVar = 10aVar != 5 -&gt; trueaVar != 10 -&gt; false 逻辑运算符非!,和&amp;&amp;,或|| 注：和 &amp;&amp;、或 || 与相等 == 或不等 != 属于二元运算符，而非 ! 属于一元运算符。 T代表符合的语句 F代表不符合的语句。 非运算符：! 12!T -&gt; false!F -&gt; true 非运算符用于取得和布尔值相反的结果。 和运算符：&amp;&amp; 1234T &amp;&amp; T -&gt; trueT &amp;&amp; F -&gt; falseF &amp;&amp; T -&gt; falseF &amp;&amp; F -&gt; false 只有当两边的值都为 true 的时候，和运算符的结果才是 true。 或运算符：|| 1234T || T -&gt; trueT || F -&gt; trueF || T -&gt; trueF || F -&gt; false 只有当两边的值都为 false 的时候，或运算符的结果才是 false，其中任意一边的值为 true 就能够使得该表达式的结果为 true。 在 Go 语言中，&amp;&amp; 和 || 是具有快捷性质的运算符，当运算符左边表达式的值已经能够决定整个表达式的值的时候（&amp;&amp; 左边的值为 false，|| 左边的值为 true），运算符右边的表达式将不会被执行。利用这个性质，如果你有多个条件判断，应当将计算过程较为复杂的表达式放在运算符的右侧以减少不必要的运算。 利用括号同样可以升级某个表达式的运算优先级。 在格式化输出时，你可以使用 %t 来表示你要输出的值为布尔型。 对于布尔值的好的命名能够很好地提升代码的可读性，例如以 is 或者 Is 开头的 isSorted、isFinished、isVisivle，使用这样的命名能够在阅读代码的获得阅读正常语句一样的良好体验，例如标准库中的 unicode.IsDigit(ch) 数字类型整型int和浮点型float基于构架的类型，列如：int,uint 这些类型的长度都是根据运行程序所在的操作系统类型所决定的： int 和 uint 在 32 位操作系统上，它们均使用 32 位（4 个字节），在 64 位操作系统上，它们均使用 64 位（8 个字节）。 uintptr 的长度被设定为足够存放一个指针即可。 与操作系统架构无关的类型都有固定的大小，并在类型的名称中就可以看出来： 整数： int8（-128 -&gt; 127） int16（-32768 -&gt; 32767） int32（-2,147,483,648 -&gt; 2,147,483,647） int64（-9,223,372,036,854,775,808 -&gt; 9,223,372,036,854,775,807） 无符号整数： uint8（0 -&gt; 255） uint16（0 -&gt; 65,535） uint32（0 -&gt; 4,294,967,295） uint64（0 -&gt; 18,446,744,073,709,551,615） 浮点型（IEEE-754 标准）： float32（+- 1e-45 -&gt; +- 3.4 * 1e38） float64（+- 5 1e-324 -&gt; 107 1e308） int 型是计算最快的一种类型。 整型的零值为 0，浮点型的零值为 0.0。 float32 精确到小数点后 7 位，float64 精确到小数点后 15 位。由于精确度的缘故，你在使用 == 或者 != 来比较浮点数时应当非常小心。你最好在正式使用前测试对于精确度要求较高的运算。 你应该尽可能地使用 float64，因为 math 包中所有有关数学运算的函数都会要求接收这个类型。 格式化说明符在格式化字符串里，%d 用于格式化整数（%x 和 %X 用于格式化 16 进制表示的数字），%g 用于格式化浮点型（%f 输出浮点数，%e 输出科学计数表示法），%0d 用于规定输出定长的整数，其中开头的数字 0 是必须的。 %n.mg 用于表示数字 n 并精确到小数点后 m 位，除了使用 g 之外，还可以使用 e 或者 f，例如：使用格式化字符串 %5.2e 来输出 3.4 的结果为 3.40e+00。 位运算符位运算只能用于整数类型的变量，且需当它们拥有等长位模式时。 %b 是用于表示位的格式化标识符。 二元运算符 按位与 &amp;： 对应位置上的值经过和运算结果，具体参见和运算符，第 4.5.1 节，并将 T（true）替换为 1，将 F（false）替换为 0 12341 &amp; 1 -&gt; 11 &amp; 0 -&gt; 00 &amp; 1 -&gt; 00 &amp; 0 -&gt; 0 按位或 |： 对应位置上的值经过或运算结果，具体参见或运算符，第 4.5.1 节，并将 T（true）替换为 1，将 F（false）替换为 0 12341 | 1 -&gt; 11 | 0 -&gt; 10 | 1 -&gt; 10 | 0 -&gt; 0 按位异或 ^： 对应位置上的值根据以下规则组合： 12341 ^ 1 -&gt; 01 ^ 0 -&gt; 10 ^ 1 -&gt; 10 ^ 0 -&gt; 0 位清除 &amp;^：将指定位置上的值设置为 0。 一元运算符 按位补足 ^： 该运算符与异或运算符一同使用，即 m^x，对于无符号 x 使用“全部位设置为 1”，对于有符号 x 时使用 m=-1。例如： 1^2 = ^10 = -01 ^ 10 = -11 位左移 &lt;&lt;： 用法：bitP &lt;&lt; n。 bitP 的位向左移动 n 位，右侧空白部分使用 0 填充；如果 n 等于 2，则结果是 2 的相应倍数，即 2 的 n 次方。例如： 1231 &lt;&lt; 10 // 等于 1 KB1 &lt;&lt; 20 // 等于 1 MB1 &lt;&lt; 30 // 等于 1 GB 位右移 &gt;&gt;： 用法：bitP &gt;&gt; n。 bitP 的位向右移动 n 位，左侧空白部分使用 0 填充；如果 n 等于 2，则结果是当前值除以 2 的 n 次方。 当希望把结果赋值给第一个操作数时，可以简写为 a &lt;&lt;= 2 或者 b ^= a &amp; 0xffffffff。 位左移常见实现存储单位的用例 使用位左移与 iota 计数配合可优雅地实现存储单位的常量枚举： 123456789101112type ByteSize float64const ( _ = iota // 通过赋值给空白标识符来忽略值 KB ByteSize = 1&lt;&lt;(10*iota) MB GB TB PB EB ZB YB) 在通讯中使用位左移表示标识的用例 12345678type BitFlag intconst ( Active BitFlag = 1 &lt;&lt; iota // 1 &lt;&lt; 0 == 1 Send // 1 &lt;&lt; 1 == 2 Receive // 1 &lt;&lt; 2 == 4)flag := Active | Send // == 3 逻辑运算符Go 中拥有以下逻辑运算符：==、!=（第 4.5.1 节）、&lt;、&lt;=、&gt;、&gt;=。 它们之所以被称为逻辑运算符是因为它们的运算结果总是为布尔值 bool。例如： 1b3:= 10 &gt; 5 // b3 is true 算数运算符常见可用于整数和浮点数的二元运算符有 +、-、* 和 /。 / 对于整数运算而言，结果依旧为整数，例如：9 / 4 -&gt; 2。 取余运算符只能作用于整数：9 % 4 -&gt; 1。 整数除以 0 可能导致程序崩溃，将会导致运行时的恐慌状态]]></content>
    </entry>

    
    <entry>
      <title><![CDATA[sublime Text 3搭建GO开发环境]]></title>
      <url>%2F2017%2F01%2F08%2Fsublime%20Text%203%E6%90%AD%E5%BB%BAGO%E5%BC%80%E5%8F%91%E7%8E%AF%E5%A2%83%2F</url>
      <content type="text"><![CDATA[sublime Text 3搭建GO开发环境首先是安装go golang官网下载地址：https://golang.org/dl/ 国内golang下载地址：http://golangtc.com/download 注意：以上请选择对应的版本进行下载，如：windows-64位 则，选择：windows-amd64.msi如果是32位系统，则选择：windows-386.msi 下载，安装，配置sublime Text 3 下载 Sublime Text 3,地址：http://www.sublimetext.com/ 下载好后，右键解压后，进入到Sublime Text3目录，双击sublime_text.exe 运行。就可以使用了。 安装Package Control，在打开 Sublime Text 2以后，按下快捷键 Ctrl + `，打开命令窗行，｀这个按键在Tab键的上面，我刚开始还没找到，呵呵。输入以下内容，并回车： import urllib.request,os; pf = &apos;Package Control.sublime-package&apos;; ipp = sublime.installed_packages_path(); urllib.request.install_opener( urllib.request.build_opener( urllib.request.ProxyHandler()) ); open(os.path.join(ipp, pf), &apos;wb&apos;).write(urllib.request.urlopen( &apos;http://sublime.wbond.net/&apos; + pf.replace(&apos; &apos;,&apos;%20&apos;)).read()) 安装完成后，重启Sublime Text 3后，就可以发现在 Preferences菜单下，多出一个菜单项 Package Control。 现在可以安装Gosublime插件了，按住Ctrl+Shilft+p会弹出一个对话框 输入install回车弹出一个安装包的对话框. 输入GoSublime选择GoSublime回车ok，GoSublime安装完成。下载安装gocode 下载安装gocode 可以去github下载https://github.com/nsf/gocode.git（要安装google的git版本管理工具）,配置git环境变量：;C:\Program Files\Git\bin;C:\Program Files\Git\libexec\git-core; 打开控制台，输入以下内容： go get -u github.com/nsf/gocode go install github.com/nsf/gocode 安装完成后，我们可以在 go/bin 目录下，发现多出了个 gocode 文件。（一定要放在bin目录下） 修改GoSublime配置：在 Preferences菜单下，找到Package Settings，然后找到 GoSublime，再往下找到 Settings - Default。再打开的文件中，添加如下配置，并保存： 好了，到目前为止，开发环境搭建完成。 sublime text3的一些基本插件中文输入法的问题从Sublime Text的初版（1.0）到现在（3.0 3065），中文输入法（包括日文输入法）都有一个问题：输入框不跟随。需要安装 ‘IMESupport’插件，之后重启Sbulime Text问题就解决了。 左侧文件夹Sublime Text支持以文件为单位进行编辑，这个在编辑一个文件夹下的代码时，尤其有用。在’file’下’open Folder’:你会发现左侧多了一个侧栏，这个侧栏列出了当前打开的文件和文件夹，使用’Ctrl + K,Ctrl + B’显示或者隐藏侧栏，使用’Ctrl + P’快速跳转到文件夹里的文件。]]></content>
    </entry>

    
    <entry>
      <title><![CDATA[Visual Studio Code中配置GO开发环境]]></title>
      <url>%2F2017%2F01%2F02%2FVisual%20Studio%20Code%E4%B8%AD%E9%85%8D%E7%BD%AEGO%E5%BC%80%E5%8F%91%E7%8E%AF%E5%A2%83-%E7%89%88%E6%9C%AC2%2F</url>
      <content type="text"><![CDATA[Visual Studio Code配置GO开发环境 参考一下文章：在Deepin Linux上用Visual Studio Code配置GoLang开发环境]]></content>
    </entry>

    
    <entry>
      <title><![CDATA[go-导航]]></title>
      <url>%2F2017%2F01%2F01%2Fgo-%E5%AF%BC%E8%88%AA%2F</url>
      <content type="text"><![CDATA[[社区]golang中国 / go语言中文网 / [教程]中文版 / GO指南 / 高效使用GO / [文档]golang wiki /]]></content>
    </entry>

    
    <entry>
      <title><![CDATA[GO语言安装和环境配置]]></title>
      <url>%2F2016%2F12%2F25%2FGO%E8%AF%AD%E8%A8%80%E5%AE%89%E8%A3%85%E5%92%8C%E7%8E%AF%E5%A2%83%E9%85%8D%E7%BD%AE%2F</url>
      <content type="text"><![CDATA[GO语言的下载安装 golang官方下载地址： 点击国内下载地址： 一路点击下一步即可。 配置环境变量 GOROOT 配置的是golang安装包的安装路径。 PATH 可以系统中直接运行go.exe，而无需进入到安装目录。 GOPATH 指定go包的安装目录。 测试go语言是否安装成功 开始菜单&gt;搜索框&gt;输入cmd(回车)&gt; 输入go(回车)看是否成功 如下图： 其他教程参考连接：github-go语言教程]]></content>
    </entry>

    
  
  
</search>
